---
## VARS
# vm_utils_terraform_provider - Sets the provider to be used in the terraform_vms play and inventory file. Default: "libvirt"
# vm_utils_terraform_env - Sets the environment to be used in the terraform_vms play and inventory file. Default: "dev"
# vm_utils_terraform_project_path - Sets the path to the terraform project to be used in the terraform_vms play. Default:
#   "{{ lookup('env', 'PWD') + '/terraform' + terraform_env + '/' + terraform_provider + '/' }}"
# vm_utils_terraform_workspace - Sets the workspace to be used in the terraform_vms play and inventory file. Default:
#   "{{ terraform_provider + '-' + terraform_env }}"
# vm_utils_terraform_inventory_path - Sets the path to the inventory file to be used in the terraform_vms play. Default:
#   "{{ lookup('env', 'PWD') + '/inventories/' + terraform_env + '/terraform.yml' }}"
# vm_utils_terraform_inventory_name - Sets the name of the inventory file to be used in the terraform_vms play. Default: env
## SHORTCUTS
# env - vm_utils_terraform_env
# provider - vm_utils_terraform_provider
# workspace - vm_utils_terraform_workspace
## ENV VARS
# VM_UTILS_TERRAFORM_PROVIDER - vm_utils_terraform_provider
# VM_UTILS_TERRAFORM_ENV - vm_utils_terraform_env
# VM_UTILS_TERRAFORM_PROJECT_PATH - vm_utils_terraform_project_path
# VM_UTILS_TERRAFORM_WORKSPACE - vm_utils_terraform_workspace
# VM_UTILS_TERRAFORM_INVENTORY_PATH - vm_utils_terraform_inventory_path
# VM_UTILS_TERRAFORM_INVENTORY_NAME - vm_utils_terraform_inventory_name
##

- name: Set Ansible inventory standardised configuration
  hosts: localhost
  gather_facts: false
  vars:
    # ENVIRONMENT
    # Defaults to demo
    # Can be overwritten with vm_utils_terraform_env or env
    _vm_utils_terraform_env: "{{ env | default(_env_env) }}"
    _env_env: "{% if lookup('env', 'VM_UTILS_TERRAFORM_ENV') != '' %}\
      {{ lookup('env', 'VM_UTILS_TERRAFORM_ENV') }}{% else %}{{ _env }}{% endif %}"
    _env: "{{ vm_utils_terraform_env | default('demo') }}"

    # INVENTORY NAME
    # Defaults to the value of _vm_utils_terraform_env
    # Can be overwritten with vm_utils_terraform_inventory_name or inventory_name
    _vm_utils_terraform_inventory_name: "{{ inventory_name | default(_env_inventory_name) }}"
    _env_inventory_name: "{% if lookup('env', 'VM_UTILS_TERRAFORM_INVENTORY_NAME') != '' %}\
      {{ lookup('env', 'VM_UTILS_TERRAFORM_INVENTORY_NAME') }}{% else %}{{ _inventory_name }}{% endif %}"
    _inventory_name: "{{ vm_utils_terraform_inventory_name | default(_vm_utils_terraform_env) }}"

    # INVENTORY PATH
    # Defaults to ${PWD}/inventories/env/terraform.yml, e.g. ./inventories/dev/terraform.yml
    # Can be overwritten with vm_utils_terraform_inventory_path
    _vm_utils_terraform_inventory_path: "{{ vm_utils_terraform_inventory_path | default(_env_inventory_path) }}"
    _env_inventory_path: "{% if lookup('env', 'VM_UTILS_TERRAFORM_INVENTORY_PATH') != '' %}\
      {{ lookup('env', 'VM_UTILS_TERRAFORM_INVENTORY_PATH') }}{% else %}\
      {{ _inventory_path }}{% endif %}"
    _inventory_path: "{{ lookup('env', 'PWD') + '/inventories/' + _vm_utils_terraform_inventory_name + '/terraform.yml' }}"

    # PROJECT PATH
    # Defaults to ${PWD}/terraform/infra/provider/, e.g. ./terraform/infra/libvirt/
    # Can be overwritten with vm_utils_terraform_project_path
    _vm_utils_terraform_project_path: "{{ vm_utils_terraform_project_path | default(_env_project_path) }}"
    _env_project_path: "{% if lookup('env', 'VM_UTILS_TERRAFORM_PROJECT_PATH') != '' %}\
      {{ lookup('env', 'VM_UTILS_TERRAFORM_PROJECT_PATH') }}{% else %}\
      {{ _project_path }}{% endif %}"
    _project_path: "{{ lookup('env', 'PWD') + '/terraform/infra/' + _vm_utils_terraform_provider + '/' }}"

    # PROVIDER
    # Defaults to libvirt
    # Can be overwritten with vm_utils_terraform_provider or provider
    _vm_utils_terraform_provider: "{{ provider | default(_env_provider) }}"
    _env_provider: "{% if lookup('env', 'VM_UTILS_TERRAFORM_PROVIDER') != '' %}\
      {{ lookup('env', 'VM_UTILS_TERRAFORM_PROVIDER') }}{% else %}{{ _provider }}{% endif %}"
    _provider: "{{ vm_utils_terraform_provider | default('libvirt') }}"

    # WORKSPACE
    # Defaults to provider-env, e.g. libvirt-dev
    # Can be overwritten with vm_utils_terraform_workspace or workspace
    _vm_utils_terraform_workspace: "{{ workspace | default(_env_workspace) }}"
    _env_workspace: "{% if lookup('env', 'VM_UTILS_TERRAFORM_WORKSPACE') != '' %}\
      {{ lookup('env', 'VM_UTILS_TERRAFORM_WORKSPACE') }}{% else %}{{ _workspace }}{% endif %}"
    _workspace: "{{ vm_utils_terraform_workspace | default(_vm_utils_terraform_provider + '-' + _vm_utils_terraform_env) }}"
  tasks:
    - name: "Create terraform inventory file"
      ansible.builtin.copy:
        content: |
          ---
          plugin: cloud.terraform.terraform_provider
          project_path: "{{ _vm_utils_terraform_project_path | regex_replace(lookup('env', 'PWD'), '.') }}"
          state_file: ""
          search_child_modules: true
          workspace: "{{ _vm_utils_terraform_workspace }}"
          ...
        dest: "{{ _vm_utils_terraform_inventory_path }}"
        mode: '0644'
      delegate_to: localhost
      when:
        - _vm_utils_terraform_project_path is defined
        - _vm_utils_terraform_inventory_name is defined
        - _vm_utils_terraform_workspace is defined

...
